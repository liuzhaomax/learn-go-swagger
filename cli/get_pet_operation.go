// Code generated by go-swagger; DO NOT EDIT.

package cli

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"learn-go-swagger/client/pet"

	"github.com/spf13/cobra"
)

// makeOperationPetGetPetCmd returns a cmd to handle operation getPet
func makeOperationPetGetPetCmd() (*cobra.Command, error) {
	cmd := &cobra.Command{
		Use:   "getPet",
		Short: ``,
		RunE:  runOperationPetGetPet,
	}

	if err := registerOperationPetGetPetParamFlags(cmd); err != nil {
		return nil, err
	}

	return cmd, nil
}

// runOperationPetGetPet uses cmd flags to call endpoint api
func runOperationPetGetPet(cmd *cobra.Command, args []string) error {
	appCli, err := makeClient(cmd, args)
	if err != nil {
		return err
	}
	// retrieve flag values from cmd and fill params
	params := pet.NewGetPetParams()
	if dryRun {

		logDebugf("dry-run flag specified. Skip sending request.")
		return nil
	}
	// make request and then print result
	msgStr, err := parseOperationPetGetPetResult(appCli.Pet.GetPet(params))
	if err != nil {
		return err
	}
	if !debug {

		fmt.Println(msgStr)
	}
	return nil
}

// registerOperationPetGetPetParamFlags registers all flags needed to fill params
func registerOperationPetGetPetParamFlags(cmd *cobra.Command) error {
	return nil
}

// parseOperationPetGetPetResult parses request result and return the string content
func parseOperationPetGetPetResult(resp0 *pet.GetPetOK, respErr error) (string, error) {
	if respErr != nil {

		// Non schema case: warning getPet default is not supported

		// Non schema case: warning getPetOK is not supported

		return "", respErr
	}

	// warning: non schema response getPetOK is not supported by go-swagger cli yet.

	return "", nil
}
